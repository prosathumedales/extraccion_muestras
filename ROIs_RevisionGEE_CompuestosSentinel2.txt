// Construcción de compuestos mensuales de escenas Sentinel-2 para la revisión de ROIs
// Script de Google Earth Engine

// Autoras: Mercedes Salvia, Natalia Morandeira

//var predelta=ee.FeatureCollection('projects/earthengine-legacy/assets/users/nmorandeira/DeltaRamsar_boundingbox_subset_EPSG4326');
var predelta=ee.FeatureCollection('projects/earthengine-legacy/assets/users/nmorandeira/DeltaRamsar_AreaPiloto_EPSG4326');
var UP_predelta=ee.FeatureCollection('projects/earthengine-legacy/assets/users/nmorandeira/UP_Delta_Ramsar_Kandus2019');

//var ROIs=ee.FeatureCollection('projects/earthengine-legacy/assets/users/nmorandeira/ROIS_prueba_join');

//la ventaja de "convert to an imported record" es que se puede ver parte de la tabla de atributos
//converted to an imported record:
var ROIs_UP2b=ee.FeatureCollection('projects/earthengine-legacy/assets/users/nmorandeira/ROIS_UPI2b_20220429');
//var ROIs_UP4=ee.FeatureCollection('projects/earthengine-legacy/assets/users/nmorandeira/ROIS_UPI4_20220429');



//elegir con qué ROIs trabajar
var ROIs = ROIs_UP2b
//var ROIs = ROIs_UP4


/**
 * Function to mask clouds using the Sentinel-2 QA band
 * @param {ee.Image} image Sentinel-2 image
 * @return {ee.Image} cloud masked Sentinel-2 image
 */
function maskS2clouds(image) {
  var qa = image.select('QA60');

  // Bits 10 and 11 are clouds and cirrus, respectively.
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;

  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));

  return image.updateMask(mask).divide(10000);
}

//agrego variables para indicar año de inicio y de fin
//habría escenas entre 2017-03-28T00:00:00Z - 2022-05-02T00:00:00, en verdad encuentro desde diciembre 2018
var anio_inic = 2018; //esto es leido como mayor-igual
var anio_fin = 2018; 


for (var year = anio_inic; year <= anio_fin;year++){
  for(var month=1; month<=12; month++){
    var predelta_col = ee.ImageCollection('COPERNICUS/S2_SR')
                  .filterBounds(predelta) //filtra la region a usar
                  .filter(ee.Filter.calendarRange(year, year, "year"))
                  .filter(ee.Filter.calendarRange(month, month, "month"))
                  //.filterDate('2018-03-01', '2019-03-31')
                  // Pre-filter to get less cloudy granules.
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE',1)) //este numero se puede cambiar
                  .map(maskS2clouds); //aplico la función para enmascarar las nubes de acuerdo a la banda de calidad

    var elementos =  predelta_col.size()
    print(month, '-', year,elementos, 'PREDELTA: Sentinel-2 Filtered collection',predelta_col);


// Composite images
    var s2composite_predelta = predelta_col.median().clip(predelta); // can be changed to mean, min, etc
    

// Add composite to map

Map.addLayer(s2composite_predelta,{bands:['B8','B11','B4'],min:0.02,max:0.5,gamma:1.5},'N-SW-R_predelta ' + year + '-' +month);

    }

    
}


//Map.addLayer(predelta,{},'predelta');
var UP_estilo = UP_predelta.style({
  color: '#FFFF00', //amarillo
  width: 1,
  fillColor: '00000000' // no fill
});

var ROIs_estilo = ROIs.style({
  color: '#FFFFFF', //white
  width: 1,
  fillColor: '00000000'
});

Map.addLayer(UP_estilo,{},'UP_predelta');

//Mapear todos los ROIs
Map.addLayer(ROIs_estilo,{},'ROIs');

//Mapear solo una clase de cobertura, filtrando. Ejemplos de coberturas:
//var clase= ROIs.filter("cobertura == 'Bosque'");
var clase= ROIs.filter("cobertura == 'Laguna-agua'"); 
//var clase= ROIs.filter("cobertura == 'Herbaceo'"); 
//var clase= ROIs.filter("cobertura == 'Herbaceo-arbustiva'"); // no funciona bien, toma tanto Herbaceo como Herbaceo_arbustiva

//Nota: en este join, cambié los guiones medios de los nombres de la tabla por guiones bajos por las dudas, igual creo que toma ambos. Al hacer el próximo join, recordar modificar el nombre de la clase aquí en el GEE

var clase_estilo = clase.style({
  color: '#00ffff', //cyan
  width: 2,
  fillColor: '00000000'
});

Map.addLayer(clase_estilo,{},'clase');

//add label to polygons
//fuente: https://gis.stackexchange.com/questions/309867/google-earth-engine-labeling-polygons-according-to-their-attributes
var text = require('users/gena/packages:text') //funcion de otrx user

// scale text font relative to the current map scale
var scale = Map.getScale() * 1

var labels = clase.map(function(feat) {
  feat = ee.Feature(feat)
  var name = ee.String(feat.get("id"))
  var centroid = feat.geometry().centroid()
  var t = text.draw(name, centroid, scale, {
    fontSize:12, //este tamaño de fuente parece que es relativo al zoom al momento de correr el script (?)
    textColor:'black',
    outlineWidth: 1,
    outlineColor: 'black'
  })
  return t
})

labels = ee.ImageCollection(labels)
Map.addLayer(labels)



Map.setCenter(-60.64168757772423,-32.30389780390337, 10);
